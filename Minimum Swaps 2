import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the minimumSwaps function below.
    static int minimumSwaps(int[] arr) 
    {
        int i=0,value,swap,count=0,n=arr.length;
        int c[]= new int[n];
        for(i=0;i<n;i++)   //by this we get array 'c' as position of numbers in 'arr'.
        {
            value=arr[i];
            c[value-1]=i+1;
        }
        i=0;
        while(i<n)  //swaping numbers if they are not on position & counting swaps
        {
            if(c[i]!=i+1)
            {
                value=c[i];      //taking value of ith position 
                swap=c[value-1];  //swapping it with the position it should be on such that c[i]==i+1 
                c[value-1]=c[i];
                c[i]=swap;
                count++;
            }
            else
            {
                i++;
            }
        }
        return count;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] arr = new int[n];

        String[] arrItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int arrItem = Integer.parseInt(arrItems[i]);
            arr[i] = arrItem;
        }

        int res = minimumSwaps(arr);

        bufferedWriter.write(String.valueOf(res));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
